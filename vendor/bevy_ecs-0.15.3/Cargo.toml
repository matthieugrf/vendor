# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.77.0"
name = "bevy_ecs"
version = "0.15.3"
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Bevy Engine's entity component system"
homepage = "https://bevyengine.org"
readme = "README.md"
keywords = [
    "ecs",
    "game",
    "bevy",
]
categories = [
    "game-engines",
    "data-structures",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/bevyengine/bevy"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "-Zunstable-options",
    "--generate-link-to-definition",
]

[features]
bevy_debug_stepping = []
default = ["bevy_reflect"]
detailed_trace = []
multi_threaded = [
    "bevy_tasks/multi_threaded",
    "arrayvec",
]
reflect_functions = [
    "bevy_reflect",
    "bevy_reflect/functions",
]
serialize = ["dep:serde"]
trace = []
track_change_detection = []

[lib]
name = "bevy_ecs"
path = "src/lib.rs"

[[example]]
name = "change_detection"
path = "examples/change_detection.rs"

[[example]]
name = "events"
path = "examples/events.rs"

[[example]]
name = "resources"
path = "examples/resources.rs"

[dependencies.arrayvec]
version = "0.7.4"
optional = true

[dependencies.bevy_ecs_macros]
version = "0.15.3"

[dependencies.bevy_ptr]
version = "0.15.3"

[dependencies.bevy_reflect]
version = "0.15.3"
optional = true

[dependencies.bevy_tasks]
version = "0.15.3"

[dependencies.bevy_utils]
version = "0.15.3"

[dependencies.bitflags]
version = "2.3"

[dependencies.concurrent-queue]
version = "2.5.0"

[dependencies.derive_more]
version = "1"
features = [
    "error",
    "from",
    "display",
    "into",
    "as_ref",
]
default-features = false

[dependencies.disqualified]
version = "1.0"

[dependencies.fixedbitset]
version = "0.5"

[dependencies.nonmax]
version = "0.5"

[dependencies.petgraph]
version = "0.6"

[dependencies.serde]
version = "1"
optional = true
default-features = false

[dependencies.smallvec]
version = "1"
features = ["union"]

[dev-dependencies.rand]
version = "0.8"

[dev-dependencies.static_assertions]
version = "1.1.0"

[lints.clippy]
alloc_instead_of_core = "warn"
doc_markdown = "warn"
manual_let_else = "warn"
match_same_arms = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
ref_as_ptr = "warn"
semicolon_if_nothing_returned = "warn"
std_instead_of_alloc = "warn"
std_instead_of_core = "warn"
too_long_first_doc_paragraph = "allow"
type_complexity = "allow"
undocumented_unsafe_blocks = "warn"
unwrap_or_default = "warn"

[lints.rust]
missing_docs = "warn"
unsafe_code = "deny"
unsafe_op_in_unsafe_fn = "warn"
unused_qualifications = "warn"

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = ["cfg(docsrs_dep)"]
