# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "bevy_render"
version = "0.15.3"
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Provides rendering functionality for Bevy Engine"
homepage = "https://bevyengine.org"
readme = "README.md"
keywords = ["bevy"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/bevyengine/bevy"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "-Zunstable-options",
    "--generate-link-to-definition",
]

[features]
basis-universal = ["bevy_image/basis-universal"]
ci_limits = []
dds = ["bevy_image/dds"]
detailed_trace = []
exr = ["bevy_image/exr"]
hdr = ["bevy_image/hdr"]
ios_simulator = []
ktx2 = [
    "dep:ktx2",
    "bevy_image/ktx2",
]
multi_threaded = ["bevy_tasks/multi_threaded"]
shader_format_glsl = [
    "naga/glsl-in",
    "naga/wgsl-out",
    "naga_oil/glsl",
]
shader_format_spirv = [
    "wgpu/spirv",
    "naga/spv-in",
    "naga/spv-out",
]
spirv_shader_passthrough = ["wgpu/spirv"]
trace = ["profiling"]
tracing-tracy = []
webgl = ["wgpu/webgl"]
webgpu = ["wgpu/webgpu"]

[lib]
name = "bevy_render"
path = "src/lib.rs"

[dependencies.async-channel]
version = "2.3.0"

[dependencies.bevy_app]
version = "0.15.3"

[dependencies.bevy_asset]
version = "0.15.3"

[dependencies.bevy_color]
version = "0.15.4"
features = [
    "serialize",
    "wgpu-types",
]

[dependencies.bevy_core]
version = "0.15.3"

[dependencies.bevy_derive]
version = "0.15.3"

[dependencies.bevy_diagnostic]
version = "0.15.3"

[dependencies.bevy_ecs]
version = "0.15.3"

[dependencies.bevy_encase_derive]
version = "0.15.3"

[dependencies.bevy_hierarchy]
version = "0.15.3"

[dependencies.bevy_image]
version = "0.15.3"

[dependencies.bevy_math]
version = "0.15.3"

[dependencies.bevy_mesh]
version = "0.15.3"

[dependencies.bevy_reflect]
version = "0.15.3"
features = ["bevy"]

[dependencies.bevy_render_macros]
version = "0.15.3"

[dependencies.bevy_tasks]
version = "0.15.3"

[dependencies.bevy_time]
version = "0.15.3"

[dependencies.bevy_transform]
version = "0.15.3"

[dependencies.bevy_utils]
version = "0.15.3"

[dependencies.bevy_window]
version = "0.15.3"

[dependencies.bytemuck]
version = "1.5"
features = [
    "derive",
    "must_cast",
]

[dependencies.codespan-reporting]
version = "0.11.0"

[dependencies.derive_more]
version = "1"
features = [
    "error",
    "from",
    "display",
]
default-features = false

[dependencies.downcast-rs]
version = "1.2.0"

[dependencies.encase]
version = "0.10"
features = ["glam"]

[dependencies.futures-lite]
version = "2.0.1"

[dependencies.image]
version = "0.25.2"
default-features = false

[dependencies.ktx2]
version = "0.3.0"
optional = true

[dependencies.naga]
version = "23"
features = ["wgsl-in"]

[dependencies.nonmax]
version = "0.5"

[dependencies.offset-allocator]
version = "0.2"

[dependencies.profiling]
version = "1"
features = ["profile-with-tracing"]
optional = true

[dependencies.serde]
version = "1"
features = ["derive"]

[dependencies.smallvec]
version = "1.11"
features = ["const_new"]

[dependencies.wgpu]
version = "23.0.1"
features = [
    "wgsl",
    "dx12",
    "metal",
    "naga-ir",
    "fragile-send-sync-non-atomic-wasm",
]
default-features = false

[target.'cfg(all(target_arch = "wasm32", target_feature = "atomics"))'.dependencies.send_wrapper]
version = "0.6.0"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies.naga_oil]
version = "0.16"
features = ["test_shader"]
default-features = false

[target.'cfg(target_arch = "wasm32")'.dependencies.js-sys]
version = "0.3"

[target.'cfg(target_arch = "wasm32")'.dependencies.naga_oil]
version = "0.16"

[target.'cfg(target_arch = "wasm32")'.dependencies.wasm-bindgen]
version = "0.2"

[target.'cfg(target_arch = "wasm32")'.dependencies.web-sys]
version = "0.3.67"
features = [
    "Blob",
    "Document",
    "Element",
    "HtmlElement",
    "Node",
    "Url",
    "Window",
]

[lints.clippy]
alloc_instead_of_core = "warn"
doc_markdown = "warn"
manual_let_else = "warn"
match_same_arms = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
ref_as_ptr = "warn"
semicolon_if_nothing_returned = "warn"
std_instead_of_alloc = "warn"
std_instead_of_core = "warn"
too_long_first_doc_paragraph = "allow"
type_complexity = "allow"
undocumented_unsafe_blocks = "warn"
unwrap_or_default = "warn"

[lints.rust]
missing_docs = "warn"
unsafe_code = "deny"
unsafe_op_in_unsafe_fn = "warn"
unused_qualifications = "warn"

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = ["cfg(docsrs_dep)"]
