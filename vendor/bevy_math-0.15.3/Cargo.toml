# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.68.2"
name = "bevy_math"
version = "0.15.3"
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Provides math functionality for Bevy Engine"
homepage = "https://bevyengine.org"
readme = "README.md"
keywords = ["bevy"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/bevyengine/bevy"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "-Zunstable-options",
    "--generate-link-to-definition",
]

[features]
approx = [
    "dep:approx",
    "glam/approx",
]
curve = []
debug_glam_assert = ["glam/debug-glam-assert"]
default = [
    "rand",
    "bevy_reflect",
    "curve",
]
glam_assert = ["glam/glam-assert"]
libm = [
    "dep:libm",
    "glam/libm",
]
mint = ["glam/mint"]
rand = [
    "dep:rand",
    "dep:rand_distr",
    "glam/rand",
]
serialize = [
    "dep:serde",
    "glam/serde",
]

[lib]
name = "bevy_math"
path = "src/lib.rs"

[dependencies.approx]
version = "0.5"
optional = true

[dependencies.bevy_reflect]
version = "0.15.3"
features = ["glam"]
optional = true

[dependencies.derive_more]
version = "1"
features = [
    "error",
    "from",
    "display",
    "into",
]
default-features = false

[dependencies.glam]
version = "0.29"
features = ["bytemuck"]

[dependencies.itertools]
version = "0.13.0"

[dependencies.libm]
version = "0.2"
optional = true

[dependencies.rand]
version = "0.8"
features = ["alloc"]
optional = true
default-features = false

[dependencies.rand_distr]
version = "0.4.3"
optional = true

[dependencies.serde]
version = "1"
features = ["derive"]
optional = true

[dependencies.smallvec]
version = "1.11"

[dev-dependencies.approx]
version = "0.5"

[dev-dependencies.glam]
version = "0.29"
features = ["approx"]

[dev-dependencies.rand]
version = "0.8"

[dev-dependencies.rand_chacha]
version = "0.3"

[lints.clippy]
alloc_instead_of_core = "warn"
doc_markdown = "warn"
manual_let_else = "warn"
match_same_arms = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
ref_as_ptr = "warn"
semicolon_if_nothing_returned = "warn"
std_instead_of_alloc = "warn"
std_instead_of_core = "warn"
too_long_first_doc_paragraph = "allow"
type_complexity = "allow"
undocumented_unsafe_blocks = "warn"
unwrap_or_default = "warn"

[lints.rust]
missing_docs = "warn"
unsafe_code = "deny"
unsafe_op_in_unsafe_fn = "warn"
unused_qualifications = "warn"

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = ["cfg(docsrs_dep)"]
