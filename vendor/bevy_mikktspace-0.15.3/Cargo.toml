# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.76.0"
name = "bevy_mikktspace"
version = "0.15.3"
authors = [
    "Benjamin Wasty <benny.wasty@gmail.com>",
    "David Harvey-Macaulay <alteous@outlook.com>",
    "Layl Bongers <LaylConway@users.noreply.github.com>",
]
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Mikkelsen tangent space algorithm"
homepage = "https://bevyengine.org"
documentation = "https://docs.rs/bevy"
readme = "README.md"
keywords = [
    "bevy",
    "3D",
    "graphics",
    "algorithm",
    "tangent",
]
license = "Zlib AND (MIT OR Apache-2.0)"
repository = "https://github.com/bevyengine/bevy"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "-Zunstable-options",
    "--generate-link-to-definition",
]

[features]
default = ["std"]
libm = [
    "glam/libm",
    "dep:libm",
]
std = ["glam/std"]

[lib]
name = "bevy_mikktspace"
path = "src/lib.rs"

[[example]]
name = "generate"
path = "examples/generate.rs"

[[test]]
name = "regression_test"
path = "tests/regression_test.rs"

[dependencies.glam]
version = "0.29.0"
default-features = false

[dependencies.libm]
version = "0.2"
optional = true
default-features = false

[lints.clippy]
alloc_instead_of_core = "warn"
doc_markdown = "warn"
manual_let_else = "warn"
match_same_arms = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
ref_as_ptr = "warn"
semicolon_if_nothing_returned = "warn"
std_instead_of_alloc = "warn"
std_instead_of_core = "warn"
too_long_first_doc_paragraph = "allow"
type_complexity = "allow"
undocumented_unsafe_blocks = "warn"
unwrap_or_default = "warn"

[lints.rust]
missing_docs = "warn"
unsafe_code = "deny"
unsafe_op_in_unsafe_fn = "warn"
unused_qualifications = "warn"

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = ["cfg(docsrs_dep)"]
