# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.76.0"
name = "bevy_reflect"
version = "0.15.3"
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Dynamically interact with rust types"
homepage = "https://bevyengine.org"
readme = "README.md"
keywords = ["bevy"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/bevyengine/bevy"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "-Zunstable-options",
    "--generate-link-to-definition",
]

[features]
alloc = []
bevy = [
    "smallvec",
    "smol_str",
]
debug = ["debug_stack"]
debug_stack = []
default = [
    "smallvec",
    "debug",
    "alloc",
]
documentation = ["bevy_reflect_derive/documentation"]
functions = ["bevy_reflect_derive/functions"]
glam = ["dep:glam"]
petgraph = ["dep:petgraph"]
smallvec = ["dep:smallvec"]
uuid = ["dep:uuid"]
wgpu-types = ["dep:wgpu-types"]

[lib]
name = "bevy_reflect"
path = "src/lib.rs"

[[example]]
name = "reflect_docs"
path = "examples/reflect_docs.rs"
required-features = ["documentation"]

[dependencies.assert_type_match]
version = "0.1.1"

[dependencies.bevy_ptr]
version = "0.15.3"

[dependencies.bevy_reflect_derive]
version = "0.15.3"

[dependencies.bevy_utils]
version = "0.15.3"

[dependencies.derive_more]
version = "1"
features = [
    "error",
    "from",
    "display",
]
default-features = false

[dependencies.disqualified]
version = "1.0"

[dependencies.downcast-rs]
version = "1.2"

[dependencies.erased-serde]
version = "0.4"

[dependencies.glam]
version = "0.29"
features = ["serde"]
optional = true

[dependencies.petgraph]
version = "0.6"
features = ["serde-1"]
optional = true

[dependencies.serde]
version = "1"

[dependencies.smallvec]
version = "1.11"
optional = true

[dependencies.smol_str]
version = "0.2.0"
features = ["serde"]
optional = true

[dependencies.uuid]
version = "=1.12"
features = [
    "v4",
    "serde",
]
optional = true

[dependencies.wgpu-types]
version = "23"
features = ["serde"]
optional = true

[dev-dependencies.bincode]
version = "1.3"

[dev-dependencies.rmp-serde]
version = "1.1"

[dev-dependencies.ron]
version = "0.8.0"

[dev-dependencies.serde]
version = "1"
features = ["derive"]

[dev-dependencies.serde_json]
version = "1.0"

[dev-dependencies.static_assertions]
version = "1.1.0"

[lints.clippy]
alloc_instead_of_core = "warn"
doc_markdown = "warn"
manual_let_else = "warn"
match_same_arms = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
ref_as_ptr = "warn"
semicolon_if_nothing_returned = "warn"
std_instead_of_alloc = "warn"
std_instead_of_core = "warn"
too_long_first_doc_paragraph = "allow"
type_complexity = "allow"
undocumented_unsafe_blocks = "warn"
unwrap_or_default = "warn"

[lints.rust]
missing_docs = "warn"
unsafe_code = "deny"
unsafe_op_in_unsafe_fn = "warn"
unused_qualifications = "warn"

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = ["cfg(docsrs_dep)"]
